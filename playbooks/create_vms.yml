- name: Create VMs in Azure

  hosts: localhost

  collections:
    - azure.azcollection

  vars_files:
    - vars/main.yml

  tasks:
    - name: Generate RSA key pair
      openssh_keypair:
        path: "{{ key_path }}{{ item }}"
        type: ed25519
        size: 4096
        state: present
      with_items:
        - "{{key_name}}"

    - name: Read the contents of the public key
      set_fact:
        public_key_content: "{{ lookup('file', '{{ key_path }}{{key_name}}.pub') }}"

    - name: Create a resource group
      azure_rm_resourcegroup:
        name: "{{ resource_group_name }}"
        location: "{{ location }}"

    - name: Create a virtual network
      azure_rm_virtualnetwork:
        resource_group: "{{ resource_group_name }}"
        name: "{{ virtual_network_name}}"
        address_prefixes: 10.0.0.0/16

    - name: Create a subnet
      register: output_subnet
      azure_rm_subnet:
        resource_group: "{{ resource_group_name }}"
        name: "{{ subnet_name}}"
        address_prefix: 10.0.1.0/24
        virtual_network: "{{ virtual_network_name}}"

    - name: Create public IP addresses
      loop: "{{ range(1, number_of_vms + 1) | list }}"
      loop_control:
        loop_var: vm_number
      register: output_ip_addresses
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group_name }}"
        sku: Standard
        allocation_method: Static
        name: "{{ vm_base_name }}{{ vm_number }}-public-IP"
        domain_name_label: "{{ vm_base_name | lower }}{{ vm_number }}-{{ dns_zone }}"

    - name: Print generated IP addresses
      loop: "{{ output_ip_addresses.results }}"
      debug:
        msg: "Generated IP address: {{ item.state.ip_address }}"

    - name: Create Network Security Group
      azure_rm_securitygroup:
        resource_group: "{{ resource_group_name }}"
        name: "{{ resource_group_name }}-VM-SecurityGroup"
        rules:
          - name: SSH
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 2001
            direction: Inbound
          - name: HTTP
            protocol: Tcp
            destination_port_range: 80
            access: Allow
            priority: 1001
            direction: Inbound
          - name: Backend
            protocol: Tcp
            destination_port_range: 8000
            access: Allow
            priority: 1002
            direction: Inbound
          - name: Database
            protocol: Tcp
            destination_port_range: 3306
            access: Allow
            priority: 1003
            direction: Inbound

    - name: Create network interfaces
      loop: "{{ range(1, number_of_vms + 1) | list }}"
      loop_control:
        loop_var: vm_number
      azure_rm_networkinterface:
        resource_group: "{{ resource_group_name }}"
        name: "{{ vm_base_name }}{{ vm_number }}-Nic"
        virtual_network: "{{ virtual_network_name}}"
        subnet: "{{ subnet_name}}"
        security_group: "{{ resource_group_name }}-VM-SecurityGroup"
        ip_configurations:
          - name: ipconfig1
            public_ip_address_name: "{{ vm_base_name }}{{ vm_number }}-public-IP"

    - name: Create multiple virtual machines
      loop: "{{ range(1, number_of_vms + 1) | list }}"
      loop_control:
        loop_var: vm_number
      azure_rm_virtualmachine:
        resource_group: "{{ resource_group_name }}"
        name: "{{ vm_base_name }}{{ vm_number }}"
        vm_size: Standard_B1s
        admin_username: "{{ admin_username }}"
        ssh_password_enabled: false
        ssh_public_keys:
          - path: /home/{{ admin_username }}/.ssh/authorized_keys
            key_data: "{{ public_key_content }}"
        image:
          offer: 0001-com-ubuntu-minimal-jammy
          publisher: Canonical
          sku: minimal-22_04-lts-gen2
          version: latest
        network_interfaces:
          - name: "{{ vm_base_name }}{{ vm_number }}-Nic"
        managed_disk_type: Standard_LRS
