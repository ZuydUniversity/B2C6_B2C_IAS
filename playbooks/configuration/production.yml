- name: Configure Production VMs
  hosts: production
  become: yes
  tasks:
    - name: Ensure Docker is running
      service:
        name: docker
        state: started

    - name: Install nginx
      apt: 
        name: nginx
        state: present
      tags:
        - nginx

    - name: Install Certbot NGINX plugin
      apt:
        name: python3-certbot-nginx
        state: present
      tags:
        - certbot

    - name: Obtain SSL certificates from Let's Encrypt
      shell: certbot certonly --nginx -d {{ ansible_fqdn }} --non-interactive --agree-tos --email your-email@example.com
      tags:
        - certbot      

    - name: Configure NGINX HTTPS site
      template:
        src: nginx_https.conf.j2
        dest: /etc/nginx/sites-available/https
        owner: root
        group: root
      notify:
        - Reload NGINX
      tags:
        - nginx

    - name: Enable NGINX https site
      file:
        src: /etc/nginx/sites-available/https
        dest: /etc/nginx/sites-enabled/https
        state: link
        owner: root
        group: root
      notify:
        - Reload NGINX
      tags:
        - nginx

    - name: Create Compose file
      copy:
        content: |
          # docker-compose.yml
          name: ansible-compose-stack
          services:
            frontend:
              image: snailcape/cipipelinetest
              restart: always
              ports:
                - 80:5000
            backend:
              image: ichishihoness/my-backend:latest
              restart: always
              ports: 
                - 8000:8000
              links:
                - db
              environment:
                DB_USER: "{{ DB_USER }}"
                DB_PASSWORD: "{{ DB_PASSWORD }}"
                DB_HOST: db
                DB_NAME: "{{ DB_NAME }}"

            db:
              image: mariadb:latest
              restart: always
              environment:
                MYSQL_ROOT_PASSWORD: "{{ DB_PASSWORD }}"
              volumes:
                - db_data:/var/lib/mysql
              ports:
                - 3306:3306

            watchtower:
              image: containrrr/watchtower
              restart: always
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock
              command: --cleanup --interval 300

          volumes:
            db_data:
        dest: /tmp/dockercompose-file

    - name: Launch Docker Compose
      ansible.builtin.command: docker compose -f /tmp/dockercompose-file up --detach

    - name: Update Dynamic DNS Record
      shell: curl $DDNS_LINK

  handler: 
    - name: Restart NGINX
      systemd:
        name: nginx
        state: restarted

    - name: Reload NGINX
      systemd:
        name: nginx
        state: reloaded