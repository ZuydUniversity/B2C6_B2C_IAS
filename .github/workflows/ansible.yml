name: Run Ansible playbooks

on:
  workflow_dispatch:
    inputs:
      numberOfDevelopmentVms:
        description: "Number of testing environment VMs to create"
        required: true
        default: 1
        type: number
      numberOfProductionVms:
        description: "Number of production environment VMs to create"
        required: true
        default: 1
        type: number

jobs:
  Create_VMs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: python setup
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Ansible
        run: |
          pip install ansible
          ansible-galaxy collection install azure.azcollection --force

      - name: Install Azure Collection requirements
        run: pip install -r ~/.ansible/collections/ansible_collections/azure/azcollection/requirements.txt

      - name: Configure Azure credentials
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Make SSH directory
        run: mkdir /home/runner/.ssh

      - name: Create VMs
        working-directory: ./playbooks
        run: ansible-playbook create_vms.yml -e DEVELOPMENT_VMS=${{ github.event.inputs.numberOfDevelopmentVms }} -e PRODUCTION_VMS=${{ github.event.inputs.numberOfProductionVms }}

      - name: Configure VMs
        working-directory: ./playbooks
        env:
          DOCKER_DB_USER: ${{ secrets.DOCKER_DB_USER }}
          DOCKER_DB_PASSWORD: ${{ secrets.DOCKER_DB_PASSWORD }}
          DOCKER_DB_NAME: ${{ secrets.DOCKER_DB_NAME }}
          VAULT_USER: ${{ secrets.VAULT_USER }}
          VAULT_PASSWORD: ${{ secrets.VAULT_PASSWORD }}
        run: ansible-playbook configure_vms.yml -e DB_USER="$DOCKER_DB_USER" -e DB_PASSWORD="$DOCKER_DB_PASSWORD" -e DB_NAME="$DOCKER_DB_NAME" -e VAULT_USER="$VAULT_USER" -e VAULT_PASSWORD="$VAULT_PASSWORD"

      - name: Configure Azure credentials
        run: az logout

      - name: Export SSH key
        env:
          VAULT_USER: ${{ secrets.VAULT_USER }}
          VAULT_PASSWORD: ${{ secrets.VAULT_PASSWORD }}
          VAULT_URL: ${{ secrets.VAULT_URL }}
          VAULT_SECRET_PATH: ${{ secrets.VAULT_SECRET_PATH }}
        run: |
          sudo apt-get install -y jq curl
          clientToken=$(curl -X POST "$VAULT_URL/v1/auth/userpass/login/$VAULT_USER" -H "Content-Type: application/json" -d "{\"password\" :  \"$VAULT_PASSWORD\" }" | jq -r ".auth.client_token")
          ssh_key_content=$(cat ~/.ssh/ansible_key.pem | jq -Rs .)
          curl -X POST "$VAULT_URL/v1/$VAULT_SECRET_PATH" -H "X-Vault-Token: $clientToken" -d "{\"key\": $ssh_key_content}"

        # clientToken=$(curl -X POST "$VAULT_URL/v1/auth/userpass/login/$VAULT_USER" -H "Content-Type: application/json" -d "{\"password\" :  \"$VAULT_PASSWORD\" }" | jq -r ".auth.client_token")
        # curl -X GET "$VAULT_URL/v1/$VAULT_SECRET_PATH" -H "X-Vault-Token: $clientToken" | jq -r '.data."key"'
